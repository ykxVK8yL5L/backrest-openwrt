#!/bin/sh /etc/rc.common
# Copyright (C) 2019 Gareth <garethgeorge97@gmail.com>

USE_PROCD=1
START=95
STOP=10

APP=backrest
CONFIGURATION=backrest

_info() {
	logger -p daemon.info -t "$APP" "$*"
}

_err() {
	logger -p daemon.err -t "$APP" "$*"
}

init_config() {
	config_load "${CONFIGURATION}"
	# Create backrest dirs
	local config_path
	local config_dir

	config_get config_path config config_path

	config_dir=${config_path%/*}
	[ -d "$config_dir" ] || mkdir -p "$config_dir" 2>/dev/null

	[ -f "$config_path" ] || touch "$config_path"

	[ -d "/lib/upgrade/keep.d" ] || mkdir -p /lib/upgrade/keep.d/luci-app-backrest 2>/dev/null
	echo "$config_path" > /lib/upgrade/keep.d/luci-app-backrest


}

start_service() {
	init_config

	local enabled
	local config_path
	local addr_type
	local port

	
	config_get enabled global enabled

	config_get config_path config config_path
	config_get addr_type config addr_type
	config_get port config port
	

	if [[ "${addr_type}" == "local" ]]; then
		addr="$(uci get network.loopback.ipaddr)"
	elif [[ "${addr_type}" == "lan" ]]; then
		addr="$(uci get network.lan.ipaddr)"
	elif [[ "${addr_type}" == "all" ]]; then
		addr=""
	fi
	[ "$enabled" == "1" ] || { _info "Instance \"backrest\" disabled."; return 1; }
	_info "Instance \"backrest\" start."
	procd_open_instance
	procd_set_param command /usr/bin/$APP  
	procd_append_param command "-bind-address=$addr:$port"
	procd_append_param command "-config-file=$config_path"

	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param file /etc/config/backrest
	# procd_set_param pidfile /var/run/backrest.pid
	procd_set_param user root
	procd_set_param group root
	procd_set_param respawn retry=60
	procd_close_instance

}

service_triggers() {
	procd_add_reload_trigger "backrest"
}
